QUE 1

Create table DEPT(
DEPTNO	int(2),
DNAME varchar(15),
LOC	varchar(10)
);

Insert into DEPT values
(10,'ACCOUNTING','NEW YORK'),
(20,'RESEARCH','DALLAS'),
(30	,'SALES','CHICAGO'),
(40,'OPERATIONS','BOSTON');

QUE 2
Create table EMP
( 
EMPNO int(4),
ENAME varchar(10),
JOB	varchar(9),
HIREDATE date,
SAL	float(7,2),
COMM float(7,2),
DEPTNO int(2)
);

Insert into EMP VALUES
(7839,'KING','MANAGER','1991-11-17',5000,NULL,10),
(7698,'BLAKE','CLERK','1981-05-01',2850,NULL,30),
(7782,'CLARK','MANAGER','1981-06-09',2450,NULL,10),
(7566,'JONES','CLERK','1981-04-02',2975,NULL,20),
(7654,'MARTIN','SALESMAN','1981-09-28',1250,1400,30),
(7499,'ALLEN','SALESMAN','1981-02-20',1600,300,30);



*SELECT STATEMENT * Write SELECT statements to achieve the following:-

QUE 3 = SELECT * FROM EMP WHERE SAL BETWEEN 2500 AND 5000;

QUE 4 = SELECT ENAME FROM EMP ORDER BY ENAME DESC;

QUE 5 = SELECT LOWER(JOB)FROM EMP;

QUE 6 = SELECT ENAME, LENGTH(ENAME) FROM EMP;

QUE 7 = SELECT DEPTNO ,COUNT(*) AS 'TOTAL NO OF EMPLOYEES' FROM EMP GROUP BY DEPTNO;

QUE 8 = SELECT DNAME ,ENAME FROM DEPT,EMP WHERE EMP.DEPTNO=DEPT.DEPTNO;

QUE 9 = SELECT INSTR(ENAME,'AR') AS POSITION FROM EMP;

QUE 10 = SELECT ENAME ,SAL*0.2 AS "HRA" FROM EMP;




PROCEDURE 

QUE 1
CREATE TABLE TEMPP(
STRING1 VARCHAR(100),
STRING2 VARCHAR(100),
MESSAGE VARCHAR(100)
);

DELIMITER //
CREATE PROCEDURE PROC1(STRING1 VARCHAR(100),
STRING2 VARCHAR(100))
BEGIN
	DECLARE MASSAGE VARCHAR(100);
    DECLARE NUMM INT;
		SELECT LOCATE(STRING1,STRING2) INTO NUMM;
        IF NUMM > 0 THEN INSERT INTO TEMPP VALUES(STRING1,STRING2,"string1 exists inside string2");
        ELSE INSERT INTO TEMPP VALUES (STRING1,STRING2,'string1 does not exists in string2');
		END IF;
        SELECT * FROM TEMPP;
END ; //
DELIMITER ;

CALL PROC1('DAC','CDAC');
CALL PROC1('DAC','MUMBAI');






QUE 2

DELIMITER //
CREATE FUNCTION FUNC1(A INT,B INT,C INT)
RETURNS BOOLEAN
DETERMINISTIC
BEGIN
	IF A<(B+C) AND B<(A+C) AND C<(A+B) THEN
		RETURN TRUE;
	ELSE 	
		RETURN FALSE;
	END IF;
    END ; //
    DELIMITER ;
    
    CREATE TABLE TRIANGLE
    (
    A INT,
    B INT,
    C INT,
    REMARK VARCHAR(25)
    );
    ;
    DELIMITER //
    CREATE PROCEDURE TRIANGLEE(P INT, Q INT, R INT)
    BEGIN 
		IF FUNC1(P,Q,R) THEN
			INSERT INTO TRIANGLE VALUES (P,Q,R,"VALID TRIANGLE");
		ELSE 
			INSERT INTO TRIANGLE VALUES(P,Q,R,"INVALID TRIANGLE");
		END IF;
	END ; //
    DELIMITER ;
        CALL TRIANGLEE(10,20,30);
        CALL TRIANGLEE(30,20,10);
        